location ~ ^/content/(.*)$ {

    set_by_lua_file $jwt_req_zone "/etc/nginx/lua/capture_jwt.lua" "content/" $1;
    set_by_lua_file $missingToken "/etc/nginx/lua/missing_token.lua";

    proxy_pass_request_headers  on;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    proxy_set_header X-Forwarded-Host  $host;

    # Hacky workaround as nginx does not allow redirects to named locations under if conditional 
    error_page 400 = @uniqueLimitContentServer;

    if ($missingToken) {
        # It does not return an error code
        return 400;
        break;
    }

    limit_req zone=zone_with_token;
    proxy_pass http://content-server/$1$is_args$args;
}


location @uniqueLimitContentServer {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=no_token;

    proxy_pass_request_headers  on;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    proxy_set_header X-Forwarded-Host  $host;

    proxy_pass http://content-server/$1$is_args$args;
}


location  ~ ^/comms/(.*)$ {
    set_by_lua_file $jwt_req_zone "/etc/nginx/lua/capture_jwt.lua" "comms/" $1;
    set_by_lua_file $missingToken "/etc/nginx/lua/missing_token.lua";

    proxy_pass_request_headers  on;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    # Hacky workaround as nginx does not allow redirects to named locations under if conditional 
    error_page 400 = @uniqueLimitCommsServer;

    if ($missingToken) {
        # It does not return an error code
        return 400;
        break;
    }

    limit_req zone=zone_with_token;
    proxy_pass http://comms-server/$1$is_args$args;
}

location @uniqueLimitCommsServer {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=no_token;

    proxy_pass_request_headers  on;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    proxy_pass http://comms-server/$1$is_args$args;
}

location  ~ ^/lambdas/(.*)$ {
    set_by_lua_file $jwt_req_zone "/etc/nginx/lua/capture_jwt.lua" "lambdas/" $1;
    set_by_lua_file $missingToken "/etc/nginx/lua/missing_token.lua";

    proxy_pass_request_headers  on;
    proxy_set_header X-Forwarded-Host  $host;

    # Hacky workaround as nginx does not allow redirects to named locations under if conditional 
    error_page 400 = @uniqueLimitLambdasServer;

    if ($missingToken) {
        # It does not return an error code
        return 400;
        break;
    }

    limit_req zone=zone_with_token;
    proxy_pass http://lambdas/$1$is_args$args;
}

location @uniqueLimitLambdasServer {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=no_token;

    proxy_pass_request_headers  on;
    proxy_set_header X-Forwarded-Host  $host;

    proxy_pass http://lambdas/$1$is_args$args;
}

location / {
    root /etc/nginx/html;
    error_page 404 /404;
    error_page 500 502 503 504 /50x;
}

location ~ ^/auth/challenge {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=no_token burst=20;
    limit_req_dry_run off;

    proxy_pass_request_headers  on;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    proxy_set_header X-Forwarded-Host  $host;
    
    proxy_pass http://pow-auth-server/challenge/$is_args$args;
}
