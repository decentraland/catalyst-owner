
# Tier A
location ~ ^/lambdas/(crypto|contracts|explore)/(.+)$ {

    include /etc/nginx/include/lambdas_proxy.conf;
    include /etc/nginx/include/read_token.conf;
    # Hacky workaround as nginx does not allow redirects to named locations under if conditional 
    error_page 400 = @uniqueLimitLambdasServer;

    include /etc/nginx/include/redirect_invalid_or_missing_token.conf;
    limit_req zone=zone_a_with_token burst=20 nodelay;

    proxy_pass http://lambdas/$1/$2$is_args$args;

}
location @uniqueLimitLambdasServer {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=zone_a_no_token burst=100 nodelay;

    proxy_pass http://lambdas/$1/$2$is_args$args;
}


# Tier B
location ~ ^/lambdas/(profile|profiles|images|collections)/(.+)$ {

    include /etc/nginx/include/lambdas_proxy.conf;
    include /etc/nginx/include/read_token.conf;
    # Hacky workaround as nginx does not allow redirects to named locations under if conditional 
    error_page 400 = @uniqueLimitLambdasServer;

    include /etc/nginx/include/redirect_invalid_or_missing_token.conf;
    limit_req zone=zone_b_with_token burst=30 nodelay;

    proxy_pass http://lambdas/$1/$2$is_args$args;

}
location @uniqueLimitLambdasServer {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=zone_b_no_token burst=50 nodelay;

    proxy_pass http://lambdas/$1/$2$is_args$args;
}


# Tier C
location ~ ^/lambdas/(contentv2)/(.+)$ {

    include /etc/nginx/include/lambdas_proxy.conf;
    include /etc/nginx/include/read_token.conf;
    # Hacky workaround as nginx does not allow redirects to named locations under if conditional 
    error_page 400 = @uniqueLimitLambdasServer;

    include /etc/nginx/include/redirect_invalid_or_missing_token.conf;
    limit_req zone=zone_c_with_token burst=500 nodelay;

    proxy_pass http://lambdas/$1/$2$is_args$args;

}
location @uniqueLimitLambdasServer {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=zone_c_no_token burst=50 nodelay;

    proxy_pass http://lambdas/$1/$2$is_args$args;
}


# Default Tier
location ~ ^/lambdas/(.*)$ {

    include /etc/nginx/include/lambdas_proxy.conf;
    include /etc/nginx/include/read_token.conf;
    # Hacky workaround as nginx does not allow redirects to named locations under if conditional 
    error_page 400 = @uniqueLimitLambdasServer;

    include /etc/nginx/include/redirect_invalid_or_missing_token.conf;
    limit_req zone=zone_default_with_token burst=20 nodelay;

    proxy_pass http://lambdas/$1$is_args$args;

}
location @uniqueLimitLambdasServer {
    set_by_lua_block $no_key { return "noKey" }
    limit_req zone=zone_default_no_token burst=50 nodelay;

    proxy_pass http://lambdas/$1$is_args$args;
}
